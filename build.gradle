plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def slf4jVersion = "2.0.12",
    allureVersion = "2.19.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
dependencies {
    testImplementation(
            "com.codeborne:selenide:6.17.2",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            'io.rest-assured:rest-assured:5.4.0',
            "com.fasterxml.jackson.core:jackson-databind:2.17.1",
            "org.assertj:assertj-core:3.25.3",
            "com.github.javafaker:javafaker:1.0.2",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.4"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task cart(type: Test) {
    useJUnitPlatform {
        includeTags("CART")
    }
}


/*
test {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        if (System.getProperty("tag") != null && !System.getProperty("tag").isEmpty()) {
            includeTags System.getProperty("tag")
        }
    }


    systemProperties += [
            'junit.jupiter.execution.parallel.enabled'                 : true,
            'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
            'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
            'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': 20
    ]

}
*/
